syntax = "proto3";

option java_package = "com.hackathonhub.serviceuser.grpc";

enum role_enum {
    ROLE_ADMIN = 0;
    ROLE_USER = 1;
}

enum status_enum {
    success = 0;
    alreadyRegisted = 1;
    error = 2;
}

enum actions_enum {
    saveUser = 0;
    deleteUser = 1;
    isExistUserByEmail = 2;
    getUserByEmail = 3;
}

message UserResponse {
    status_enum status = 1;
    actions_enum action = 2;
    string message = 3;
    oneof response {
        UserResponseData user = 4;
        bool isUserAlreadyExist = 5;
        bool isPasswordValidated = 6;
        UserGetAllArray allUsers = 7;
    };
}

message UserResponseData {
    string id = 1;
    string username = 2;
    string fullName = 3;
    string email = 4;
    string password = 5;
    bool isActivated = 6;
    repeated UserRole roles = 8;
    string teamId = 7;
};

message UserRole {
    string id = 1;
    role_enum role = 2;
};

message UserGetAllArray {
    repeated UserResponseData users = 1;
}


message UserRequest {
    actions_enum action = 1;
    oneof request {
        UserSaveRequest userForSave = 2;
        UserDeleteByIdRequest userForDelete = 3;
        UserGetByEmailRequest userForGetByEmail = 4;
        UserDeleteByIdRequest userForDeleteById = 5;
        UserIsExistByEmailRequest userIsExistByEmail = 6;
    };
}

message UserDeleteByIdRequest {
    string id = 1;
}

message UserGetByEmailRequest {
    string email = 1;
}

message UserIsExistByEmailRequest {
    string email = 1;
}

message UserSaveRequest {
    string id = 1;
    string username = 2;
    string fullName = 3;
    string email = 4;
    string password = 5;
    bool isActivated = 6;
    string teamId = 7;
    repeated UserRole roles = 8;
};


service User {
    rpc saveUser (UserRequest) returns (UserResponse);
    rpc deleteUser (UserRequest) returns (UserResponse);
    rpc isExistUserByEmail (UserRequest) returns (UserResponse);
    rpc getUserByEmail (UserRequest) returns (UserResponse);
}